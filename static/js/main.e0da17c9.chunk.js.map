{"version":3,"sources":["../node_modules/peerjs/dist sync","lines/ai.tsx","lines/App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ai","player","board","JSON","parse","stringify","renderLine","line","row","onClick","map","x","col","tile","color","style","background","gridRow","gridColumn","border","renderTile","useRefCallback","f","ref","useRef","useEffect","current","App","useState","size","line1","Array","i","line2","newBoard","setBoard","setPlayer","yourTurn","setYourTurn","undefined","connection","setConnection","onData","nb","opts","peer","setPeer","init","setInit","onConnection","newPeer","Peer","on","conn","destroy","peerId","connect","usePeer","send","match","window","location","hash","history","pushState","document","title","pathname","search","className","href","target","display","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0da17c9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;","\r\n\r\n\r\nfunction ai(player: number, board: number[][]) {\r\n\tboard = JSON.parse(JSON.stringify(board));\r\n\r\n\r\n\treturn JSON.stringify({\r\n\t});\r\n}\r\n\r\nexport default ai;\r\n","import React, {useState, useEffect, useRef} from 'react';\nimport Peer from 'peerjs';\n\nimport ai from './ai';\n\nfunction newBoard(size: number): number[][] {\n    const line1 = [2, ...[...new Array(size)].map((x, i) => i % 2 ? 1 : 0), 2];\n    const line2 = [2, ...[...new Array(size)].map((x, i) => i % 2 ? 0 : 2), 2];\n    const board = [...new Array(size)].map((x, i) => i % 2 ? line1 : line2);\n    return [\n        [1, ...[...new Array(size)].map(x => 1), 2],\n        ...board,\n        [2, ...[...new Array(size)].map(x => 1), 1],\n    ];\r\n}\n\ntype clickHandler = (row: number, col: number) => void;\n\nfunction renderTile(tile: number, row: number, col: number, onClick: clickHandler)\n{\n    const color = tile == 0 ? \"white\" : tile == 2 ? \"red\" : \"blue\";\r\n\n    return <span style={{background: color, gridRow: row + 1, gridColumn: col + 1, border: \"1px solid black\"}} onClick={(e) => onClick(row, col)}></span>\r\n}\n\nfunction renderLine(line: number[], row: number, onClick: clickHandler)\n{\n    return <>\r\n        {line.map((x, col) => renderTile(x, row, col, onClick))}\r\n    </>\r\n}\n\ntype PeerOpts = {\n    onConnection: (coon: Peer.DataConnection) => void,\r\n};\n\nfunction usePeer(opts: PeerOpts): [ Peer | undefined, (peerId: string) => void ]\n{\n    let [ peer, setPeer ] = useState<Peer | undefined>(undefined);\r\n    let [ init, setInit ] = useState(false);\r\n    let onConnection = useRefCallback(opts.onConnection);\r\n\r\n    useEffect(() => {\r\n        const newPeer = new Peer();\r\n        newPeer.on('open', () => {\r\n            setInit(true);\r\n        });\r\n\r\n        setPeer(newPeer);\r\n\r\n        newPeer.on('connection', conn => {\r\n            conn.on('open', () => {\r\n                onConnection(conn);\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            if (peer)\r\n                peer.destroy();\r\n        }\r\n    }, []);\r\n\r\n    function connect(peerId: string)\r\n    {\r\n        if (!peer)\r\n            return;\r\n        const conn = peer.connect(peerId);\r\n        conn.on('open', () => {\r\n            onConnection(conn);\r\n        });\r\n    }\r\n\r\n    return [\r\n        init ? peer : undefined,\r\n        connect,\r\n    ];\r\n}\n\nfunction removeHash()\r\n{\r\n    window.history.pushState(\"\", document.title, window.location.pathname + window.location.search);\r\n}\n\nfunction useRefCallback<F extends Function>(f: F): F\n{\n    let ref = useRef<F>(f);\n\n    useEffect(() => {\n        ref.current = f;\r\n    }, [f]);\n\n    let r = (...args: any[]) => ref.current(...args);\n    return r as any as F;\n}\n\nfunction App() {\n    let [board, setBoard]= useState(newBoard(6));\n    let [player, setPlayer] = useState(1);\n    let [other, setOther] = useState('');\n    let [text, setText] = useState('');\n    let [yourTurn, setYourTurn] = useState(true);\n    let [connection, setConnection] = useState<Peer.DataConnection | undefined>(undefined);\n\n    let [callbacks] = useState<any>({});\n    let onData = useRefCallback(({row, col}: any) => {\n        const nb = JSON.parse(JSON.stringify(board));\n        nb[row][col] = player;\n        setBoard(nb);\n        setPlayer(3 - player);\n        setYourTurn(true);\n    });\n    let [ peer, connect ] = usePeer({\n        onConnection: (conn: Peer.DataConnection) => {\n            if (!connection)\n                setConnection(conn);\n            conn.on('data', onData);\n        },\n    });\n\n    useEffect(() => {\n        let hash = window.location.hash;\n        let match = hash.match(/^#connect=(.*)/);\n        if (peer && match) {\n            connect(match[1]);\n            removeHash();\n        };\r\n    }, [ peer ]);\n\n    function onClick(row: number, col: number) {\n        if (!connection)\n            return;\n        if (board[row][col] != 0)\n            return;\n        if (!yourTurn)\n            return;\n        const nb = JSON.parse(JSON.stringify(board));\n        nb[row][col] = player;\n        setBoard(nb);\n        setPlayer(3 - player);\n        setYourTurn(false)\n        connection.send({ row, col });\n        //alert(`${row}x${col}`);\r\n    }\n\n    return (\n        <div className=\"App\">\n            <div>v0.42.1</div>\n            {connection ? 'Connected' : peer ? <a href={window.location + '#connect=' + peer.id} target=\"_blank\">Share</a> : 'Initializing...'}\n            <br/>\n            {yourTurn ? 'Your' : 'Opponent'} ({player == 1 ? 'Blue' : 'Red'}) Move\n            {/*<input type=\"text\" onChange={(e) => setOther(e.target.value)}/><button onClick={() => connect(peer.connect(other))}>Connect</button>*/}\n            {/*<input type=\"text\" onChange={(e) => setText(e.target.value)}/><button onClick={() => { setYourTurn(false); conn.send(text); setText(''); } }>Send</button>*/}\n            <div style={{ display: 'grid', width: '700px', height: '700px' }}>\n                {board.map((x, i) => renderLine(x, i, onClick))}\n            </div>\n            <br/>\n            {ai(player, board)}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './lines/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}